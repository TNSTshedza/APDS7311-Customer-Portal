{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramab\\\\OneDrive\\\\Desktop\\\\Customer-Portal\\\\frontend\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n// import '../styles/RegisterForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n\n  // Input validation with RegEx patterns\n  const usernameRegex = /^[a-zA-Z0-9]+$/;\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  const validateForm = () => {\n    if (!usernameRegex.test(formData.username)) {\n      setMessage('Username can only contain alphanumeric characters.');\n      return false;\n    }\n    if (!passwordRegex.test(formData.password)) {\n      setMessage('Password must be at least 8 characters long, contain uppercase, number, and special character.');\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    try {\n      const response = await axios.post('http://localhost:5000/register', formData);\n      if (response.status === 201) {\n        setMessage('Registration successful! You can now log in.');\n      } else {\n        setMessage('Registration failed. Please try again.');\n      }\n    } catch (error) {\n      setMessage('Registration failed. Please check your input and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration form\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\" // Added id for the username input\n          ,\n          placeholder: \"Enter your username\",\n          value: formData.username,\n          onChange: e => setFormData({\n            ...formData,\n            username: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\" // Added id for the password input\n          ,\n          placeholder: \"Create a password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"button\",\n          value: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup\",\n          children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => setMessage('Switch to Login'),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"LA3N1Il6HiG8RV+GcfAOJPW9j6o=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterForm","_s","formData","setFormData","username","password","message","setMessage","usernameRegex","passwordRegex","validateForm","test","handleSubmit","e","preventDefault","response","post","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","style","cursor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ramab/OneDrive/Desktop/Customer-Portal/frontend/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n// import '../styles/RegisterForm.css';\r\n\r\nconst RegisterForm = () => {\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Input validation with RegEx patterns\r\n  const usernameRegex = /^[a-zA-Z0-9]+$/;\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n  const validateForm = () => {\r\n    if (!usernameRegex.test(formData.username)) {\r\n      setMessage('Username can only contain alphanumeric characters.');\r\n      return false;\r\n    }\r\n    if (!passwordRegex.test(formData.password)) {\r\n      setMessage('Password must be at least 8 characters long, contain uppercase, number, and special character.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/register', formData);\r\n      if (response.status === 201) {\r\n        setMessage('Registration successful! You can now log in.');\r\n      } else {\r\n        setMessage('Registration failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Registration failed. Please check your input and try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"registration form\">\r\n        <header>Signup</header>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Add ids to the input elements and corresponding labels */}\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\" // Added id for the username input\r\n            placeholder=\"Enter your username\"\r\n            value={formData.username}\r\n            onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\" // Added id for the password input\r\n            placeholder=\"Create a password\"\r\n            value={formData.password}\r\n            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n            required\r\n          />\r\n\r\n          <input type=\"submit\" className=\"button\" value=\"Signup\" />\r\n        </form>\r\n        <p>{message}</p>\r\n        <div className=\"signup\">\r\n          <span className=\"signup\">\r\n            Already have an account?{' '}\r\n            {/* Removed the htmlFor attribute as it's not associated with any input */}\r\n            <label style={{ cursor: 'pointer' }} onClick={() => setMessage('Switch to Login')}>Login</label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}