{"version":3,"sources":["payments.js"],"names":["processPayment","req","res","_req$body","body","swiftCode","amount","currency","beneficiaryName","test","swiftRegex","status","message","json","transactionId","module"],"mappings":"aAAA,IAAMA,eAAiB,SAACC,EAAKC,GAAQ,IAAAC,EACwBF,EAAIG,KAArDC,EADyBF,EACzBE,UAAWC,EADcH,EACdG,OADcH,EACNI,SADMJ,EACIK,gBADJ,MAAA,8CAAAC,KACdH,GASfA,GAAU,EALTI,EAAUC,OAAMN,KAAAA,KAArB,CAAiCO,QAAA,wBAIjCV,EAAAS,OAAA,KAAAE,KAAA,CAAAD,QAAA,iCAAAE,cAAA,UAR2BP,EADMI,OAAA,KACNJ,KAAAA,CADMK,QAAA,wBAUjCG,OAAIT,QAAa,CAAAN,eAAAA","file":"payments.min.js","sourcesContent":["const processPayment = (req, res) => {\r\n    const { swiftCode, amount, currency, beneficiaryName } = req.body;\r\n  \r\n    // Validate SWIFT code\r\n    const swiftRegex = /^[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?$/;\r\n    if (!swiftRegex.test(swiftCode)) {\r\n      return res.status(400).json({ message: 'Invalid SWIFT code' });\r\n    }\r\n  \r\n    // Validate amount\r\n    if (amount <= 0) {\r\n      return res.status(400).json({ message: 'Invalid amount' });\r\n    }\r\n  \r\n    // Process payment (mock)\r\n    res.status(200).json({ message: 'Payment processed successfully', transactionId: '12345' });\r\n  };\r\n  \r\n  module.exports = { processPayment };\r\n  "]}