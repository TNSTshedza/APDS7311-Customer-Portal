{"version":3,"sources":["server.js"],"names":["https","require","fs","express","registerUser","bodyParser","cors","helmet","rateLimit","app","use","origin","json","limiter","windowMs","max","post","PORT","process","env","httpsOptions","key","readFileSync","cert","createServer","listen","console","log"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;eACyBA,OAAO,CAAC,QAAD,C;IAAxBG,Y,YAAAA,Y;;AACR,IAAMC,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMO,SAAS,GAAGP,OAAO,CAAC,oBAAD,CAAzB;;AAEA,IAAMQ,GAAG,GAAGN,OAAO,EAAnB,C,CAEA;;AACAM,GAAG,CAACC,GAAJ,CAAQH,MAAM,EAAd,E,CAAmB;;AACnBE,GAAG,CAACC,GAAJ,CAAQJ,IAAI,CAAC;AAAEK,EAAAA,MAAM,EAAE;AAAV,CAAD,CAAZ,E,CAAoD;;AACpDF,GAAG,CAACC,GAAJ,CAAQL,UAAU,CAACO,IAAX,EAAR,E,CAEA;;AACA,IAAMC,OAAO,GAAGL,SAAS,CAAC;AACxBM,EAAAA,QAAQ,EAAE,KAAK,EAAL,GAAU,IADI;AACE;AAC1BC,EAAAA,GAAG,EAAE,GAFmB,CAEd;;AAFc,CAAD,CAAzB;AAIAN,GAAG,CAACC,GAAJ,CAAQG,OAAR,E,CAEA;;AACAJ,GAAG,CAACO,IAAJ,CAAS,WAAT,EAAsBZ,YAAtB;AAEA,IAAMa,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC,C,CAEA;;AACA,IAAMG,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAEnB,EAAE,CAACoB,YAAH,CAAgB,YAAhB,CADc;AAEnBC,EAAAA,IAAI,EAAErB,EAAE,CAACoB,YAAH,CAAgB,aAAhB;AAFa,CAArB,C,CAKA;;AACAtB,KAAK,CAACwB,YAAN,CAAmBJ,YAAnB,EAAiCX,GAAjC,EAAsCgB,MAAtC,CAA6CR,IAA7C,EAAmD,YAAM;AACvDS,EAAAA,OAAO,CAACC,GAAR,+CAAmDV,IAAnD;AACD,CAFD","sourcesContent":["const https = require('https');\r\nconst fs = require('fs');\r\nconst express = require('express');\r\nconst { registerUser } = require('./auth');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\nconst helmet = require('helmet');\r\nconst rateLimit = require('express-rate-limit');\r\n\r\nconst app = express();\r\n\r\n// Use security middleware\r\napp.use(helmet()); // Protect against common vulnerabilities\r\napp.use(cors({ origin: 'http://localhost:3000' })); // Allow only requests from the frontend\r\napp.use(bodyParser.json());\r\n\r\n// Rate Limiter Middleware for preventing DDoS and brute force attacks\r\nconst limiter = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: 100, // limit each IP to 100 requests per windowMs\r\n});\r\napp.use(limiter);\r\n\r\n// Register route\r\napp.post('/register', registerUser);\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\n// Read SSL certificate and key\r\nconst httpsOptions = {\r\n  key: fs.readFileSync('server.key'),\r\n  cert: fs.readFileSync('server.cert'),\r\n};\r\n\r\n// Create an HTTPS server\r\nhttps.createServer(httpsOptions, app).listen(PORT, () => {\r\n  console.log(`Server running on https://localhost:${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}