# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current
    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  sonarqube:
    working_directory: ~/build
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - checkout
      - run:
          name: "Check Linux Distribution"
          command: cat /etc/os-release
      - run:
          name: "Install findutils (Debian/Ubuntu)"
          command: |
            if command -v apt-get &> /dev/null; then
              apt-get update && apt-get install -y findutils
            else
              echo "apt-get not available, skipping."
            fi
      - run:
          name: "Install findutils (Alpine)"
          command: |
            if command -v apk &> /dev/null; then
              apk add --no-cache findutils
            else
              echo "apk not available, skipping."
            fi
      - run:
          name: "Install findutils (CentOS/Red Hat)"
          command: |
            if command -v yum &> /dev/null; then
              yum install -y findutils
            else
              echo "yum not available, skipping."
            fi
      - run:
          name: "Verify find Installation"
          command: which find
      - run:
          name: "List Files"
          command: find .
      - attach_workspace:
          at: ~/workspace
      - run:
          name: "Run SonarQube Analysis"
          command: |
            if [ -z "$SONAR_PROJECT_KEY" ] || [ -z "$SONAR_ORG" ] || [ -z "$SONAR_TOKEN" ]; then
              echo "Environment variables SONAR_PROJECT_KEY, SONAR_ORG, or SONAR_TOKEN are not set. Exiting."
              exit 1
            fi
            SONAR_BRANCH="${CIRCLE_BRANCH:-main}"
            echo "Sonar branch value is: $SONAR_BRANCH"
            echo "Sonar org value is: $SONAR_ORG"
            sonar-scanner \
              -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
              -Dsonar.organization="$SONAR_ORG" \
              -Dsonar.host.url="https://sonarcloud.io" \
              -Dsonar.exclusions="/android/**,/ios/**" \
              -Dsonar.login="$SONAR_TOKEN" \
              -Dsonar.branch.name="$SONAR_BRANCH" \
              -Dsonar.sources="."
            
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - say-hello
      - sonarqube
